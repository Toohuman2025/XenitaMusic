name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Install Android Tools
      run: |
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.1" "ndk;25.2.9519653"
    
    - name: Set Environment
      run: |
        echo "ANDROID_HOME=/usr/local/lib/android/sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/usr/local/lib/android/sdk" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk/25.2.9519653" >> $GITHUB_ENV
    
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git zip unzip libffi-dev libssl-dev python3-dev
        sudo apt-get install -y build-essential zlib1g-dev libncurses5-dev
        sudo apt-get install -y cmake automake autoconf libtool
    
    - name: Install Buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.33
    
    - name: Override buildozer.spec
      run: |
        cat > buildozer.spec << 'EOF'
        [app]
        title = Xenita Music Player
        package.name = xenitamusic
        package.domain = com.toohuman
        source.dir = .
        source.include_exts = py,png,jpg,jpeg,kv,atlas,ttf,mp3,ogg,wav,flac,m4a
        version = 1.0.0
        requirements = python3,kivy==2.2.1,android,pyjnius
        orientation = portrait
        fullscreen = 0
        android.permissions = INTERNET,READ_EXTERNAL_STORAGE,WRITE_EXTERNAL_STORAGE,ACCESS_NETWORK_STATE,WAKE_LOCK
        android.minapi = 21
        android.api = 33
        android.ndk = 25.2.9519653
        android.archs = arm64-v8a
        android.accept_sdk_license = True
        android.skip_update = True
        android.sdk_path = /usr/local/lib/android/sdk
        android.ndk_path = /usr/local/lib/android/sdk/ndk/25.2.9519653
        log_level = 2
        warn_on_root = 0
        
        [buildozer]
        log_level = 2
        build_dir = ./.buildozer
        bin_dir = ./bin
        EOF
    
    - name: Link Build Tools
      run: |
        mkdir -p /home/runner/.buildozer/android/platform/android-sdk
        ln -s /usr/local/lib/android/sdk/build-tools /home/runner/.buildozer/android/platform/android-sdk/build-tools
        ln -s /usr/local/lib/android/sdk/platforms /home/runner/.buildozer/android/platform/android-sdk/platforms
        ln -s /usr/local/lib/android/sdk/platform-tools /home/runner/.buildozer/android/platform/android-sdk/platform-tools
        ln -s /usr/local/lib/android/sdk/ndk /home/runner/.buildozer/android/platform/android-sdk/ndk-bundle
    
    - name: Build APK
      run: |
        buildozer -v android debug
    
    - name: Find and Upload APK
      run: |
        APK_PATH=$(find . -name "*.apk" -type f | head -n 1)
        if [ -z "$APK_PATH" ]; then
          echo "ERROR: No APK found!"
          find . -name "*.apk" -o -name "*.aab"
          ls -lah bin/ || echo "No bin directory"
          exit 1
        fi
        echo "Found APK at: $APK_PATH"
        echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: xenitamusic-apk
        path: ${{ env.APK_PATH }}
