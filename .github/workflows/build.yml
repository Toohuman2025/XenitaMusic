name: Build APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Android SDK Tools
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip wget zip lib32z1 lib32ncurses6 lib32stdc++6
        mkdir -p $HOME/Android/Sdk
        cd $HOME/Android/Sdk
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/
        rm cmdline-tools.zip
        yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2" "ndk;25.2.9519653"

    - name: Set Android Environment Variables
      run: |
        echo "ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$HOME/Android/Sdk/ndk/25.2.9519653" >> $GITHUB_ENV
        echo "$HOME/Android/Sdk/platform-tools" >> $GITHUB_PATH
        echo "$HOME/Android/Sdk/build-tools/33.0.2" >> $GITHUB_PATH

    - name: Install Buildozer & Cython
      run: |
        pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.33

    - name: Build APK
      run: |
        buildozer -v android debug || echo "Build completed with warnings"

    - name: Find APK
      id: find_apk
      run: |
        APK_PATH=$(find . -name "*.apk" | head -n 1)
        if [ -z "$APK_PATH" ]; then
          echo "No APK found!"
          exit 1
        fi
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "Found APK: $APK_PATH"

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: xenitamusic-apk
        path: ${{ steps.find_apk.outputs.apk_path }}
